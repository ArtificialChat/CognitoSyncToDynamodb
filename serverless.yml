# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: Cognito-Dynamodb-Sync # NOTE: update this with your service name
# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"
plugins:
  - serverless-step-functions
  - serverless-pseudo-parameters
custom:
  Client:
      dev: 'yourUserPoolClientIdDev'
      production: 'yourUserPoolClientIdProduction'
  userTable:
      dev: 'UsersDev'
      production: 'Users'
provider:
  name: aws
  runtime: nodejs8.10
  stage: ${opt:stage, 'dev'}
  region: 'You Region'
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "cognito-idp:*"
      Resource: "*"
    - Effect: "Allow"
      Action:
        - "dynamodb:*"
      Resource:  [
        "arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/Users",
        "arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/Users/index/*"
      ]
    - Effect: "Allow"
      Action:
        - "dynamodb:*"
      Resource:  [
        "arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/UsersDev",
        "arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/UsersDev/index/*"
      ]
    - Effect: "Allow"
      Action:
        - "states:StartExecution"
      Resource:
        - "*"

stepFunctions:
  stateMachines:
    cognitoSyncDynamodbFlow:
      name: cognitoSyncDynamodbFlow-${opt:stage}
      definition:
        Comment: "Sync User from Cognito to Dynamodb"
        StartAt: CognitoSyncDynamodb
        States:
          CognitoSyncDynamodb:
            Type: Task
            Resource: arn:aws:lambda:${opt:region}:#{AWS::AccountId}:function:${self:service}-${opt:stage}-syncCognitoToDynamodb
            End: true

functions:
  postUserConfirm :
    handler: handler.postUserConfirm
    environment:
      statemachine_arn: ${self:resources.Outputs.CognitoSyncDynamodbFlow.Value}
      clientId: ${self:custom.eHealthClient.${opt:stage}}
  syncCognitoToDynamodb:
    handler: handler.syncCognitoToDynamodb
    environment:
      userTable: ${self:custom.userTable.${opt:stage}}

resources:
  Outputs:
    CognitoSyncDynamodbFlow:
      Description: The ARN of the state machine
      Value:
        Ref: CognitoSyncDynamodbFlowDash${opt:stage}
